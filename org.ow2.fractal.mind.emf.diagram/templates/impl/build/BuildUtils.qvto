/*
 * Copyright (c) 2009 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 */
import gmf.EMFUtils;

/*
 *               TEMPORARY WORKAROUND FOR GMFGen elements not compatible with EObject blackbox helpers
 *               GET RID OF THIS FILE ONCE issues with blackbox impl are resolved.
 *               This library merely "exports" error messages from antbuild.xpt to keep it clean.
 */

modeltype gmfgen uses "http://www.eclipse.org/gmf/2009/GenModel";
modeltype ecore uses "http://www.eclipse.org/emf/2002/Ecore";

library BuildUtils;

query GenEditorGenerator::uri() : String { return self.oclAsType(ecore::EObject).uri(); }
query GenEditorGenerator::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }

query GenCommonBase::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenEditorView::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query Behaviour::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query ElementType::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenPreferencePage::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenPropertySheet::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenPropertyTab::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenNavigator::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenPlugin::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query Palette::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenDiagramUpdater::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenApplication::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenParserImplementation::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenParsers::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenContributionItem::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
query GenExpressionInterpreter::uriFragment() : String { return self.oclAsType(ecore::EObject).uriFragment(); }
