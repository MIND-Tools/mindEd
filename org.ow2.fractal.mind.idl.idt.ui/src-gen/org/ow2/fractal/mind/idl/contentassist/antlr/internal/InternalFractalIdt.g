/*
* generated by Xtext
*/
grammar InternalFractalIdt;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.ow2.fractal.mind.idl.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.ow2.fractal.mind.idl.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.ow2.fractal.mind.idl.services.FractalIdtGrammarAccess;

}

@parser::members {
 
 	private FractalIdtGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FractalIdtGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleIdtFile
entryRuleIdtFile 
:
{ before(grammarAccess.getIdtFileRule()); }
	 ruleIdtFile
{ after(grammarAccess.getIdtFileRule()); } 
	 EOF 
;

// Rule IdtFile
ruleIdtFile 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdtFileAccess().getGroup()); }
(rule__IdtFile__Group__0)
{ after(grammarAccess.getIdtFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition 
:
{ before(grammarAccess.getTypeDefinitionRule()); }
	 ruleTypeDefinition
{ after(grammarAccess.getTypeDefinitionRule()); } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefinitionAccess().getGroup()); }
(rule__TypeDefinition__Group__0)
{ after(grammarAccess.getTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedefSpecification
entryRuleTypedefSpecification 
:
{ before(grammarAccess.getTypedefSpecificationRule()); }
	 ruleTypedefSpecification
{ after(grammarAccess.getTypedefSpecificationRule()); } 
	 EOF 
;

// Rule TypedefSpecification
ruleTypedefSpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getGroup()); }
(rule__TypedefSpecification__Group__0)
{ after(grammarAccess.getTypedefSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedTypeSpecification
entryRuleQualifiedTypeSpecification 
:
{ before(grammarAccess.getQualifiedTypeSpecificationRule()); }
	 ruleQualifiedTypeSpecification
{ after(grammarAccess.getQualifiedTypeSpecificationRule()); } 
	 EOF 
;

// Rule QualifiedTypeSpecification
ruleQualifiedTypeSpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedTypeSpecificationAccess().getGroup()); }
(rule__QualifiedTypeSpecification__Group__0)
{ after(grammarAccess.getQualifiedTypeSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeSpecification
entryRuleTypeSpecification 
:
{ before(grammarAccess.getTypeSpecificationRule()); }
	 ruleTypeSpecification
{ after(grammarAccess.getTypeSpecificationRule()); } 
	 EOF 
;

// Rule TypeSpecification
ruleTypeSpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSpecificationAccess().getAlternatives()); }
(rule__TypeSpecification__Alternatives)
{ after(grammarAccess.getTypeSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedefName
entryRuleTypedefName 
:
{ before(grammarAccess.getTypedefNameRule()); }
	 ruleTypedefName
{ after(grammarAccess.getTypedefNameRule()); } 
	 EOF 
;

// Rule TypedefName
ruleTypedefName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedefNameAccess().getFullyQualifiedNameParserRuleCall()); }
	ruleFullyQualifiedName
{ after(grammarAccess.getTypedefNameAccess().getFullyQualifiedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructOrUnionSpecification
entryRuleStructOrUnionSpecification 
:
{ before(grammarAccess.getStructOrUnionSpecificationRule()); }
	 ruleStructOrUnionSpecification
{ after(grammarAccess.getStructOrUnionSpecificationRule()); } 
	 EOF 
;

// Rule StructOrUnionSpecification
ruleStructOrUnionSpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructOrUnionSpecificationAccess().getAlternatives()); }
(rule__StructOrUnionSpecification__Alternatives)
{ after(grammarAccess.getStructOrUnionSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructOrUnionDefinition
entryRuleStructOrUnionDefinition 
:
{ before(grammarAccess.getStructOrUnionDefinitionRule()); }
	 ruleStructOrUnionDefinition
{ after(grammarAccess.getStructOrUnionDefinitionRule()); } 
	 EOF 
;

// Rule StructOrUnionDefinition
ruleStructOrUnionDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getGroup()); }
(rule__StructOrUnionDefinition__Group__0)
{ after(grammarAccess.getStructOrUnionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructorUnionReference
entryRuleStructorUnionReference 
:
{ before(grammarAccess.getStructorUnionReferenceRule()); }
	 ruleStructorUnionReference
{ after(grammarAccess.getStructorUnionReferenceRule()); } 
	 EOF 
;

// Rule StructorUnionReference
ruleStructorUnionReference 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructorUnionReferenceAccess().getGroup()); }
(rule__StructorUnionReference__Group__0)
{ after(grammarAccess.getStructorUnionReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructOrUnion
entryRuleStructOrUnion 
:
{ before(grammarAccess.getStructOrUnionRule()); }
	 ruleStructOrUnion
{ after(grammarAccess.getStructOrUnionRule()); } 
	 EOF 
;

// Rule StructOrUnion
ruleStructOrUnion 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
(rule__StructOrUnion__Alternatives)
{ after(grammarAccess.getStructOrUnionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructMember
entryRuleStructMember 
:
{ before(grammarAccess.getStructMemberRule()); }
	 ruleStructMember
{ after(grammarAccess.getStructMemberRule()); } 
	 EOF 
;

// Rule StructMember
ruleStructMember 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructMemberAccess().getGroup()); }
(rule__StructMember__Group__0)
{ after(grammarAccess.getStructMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumSpecification
entryRuleEnumSpecification 
:
{ before(grammarAccess.getEnumSpecificationRule()); }
	 ruleEnumSpecification
{ after(grammarAccess.getEnumSpecificationRule()); } 
	 EOF 
;

// Rule EnumSpecification
ruleEnumSpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumSpecificationAccess().getAlternatives()); }
(rule__EnumSpecification__Alternatives)
{ after(grammarAccess.getEnumSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDefinition
entryRuleEnumDefinition 
:
{ before(grammarAccess.getEnumDefinitionRule()); }
	 ruleEnumDefinition
{ after(grammarAccess.getEnumDefinitionRule()); } 
	 EOF 
;

// Rule EnumDefinition
ruleEnumDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDefinitionAccess().getGroup()); }
(rule__EnumDefinition__Group__0)
{ after(grammarAccess.getEnumDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumReference
entryRuleEnumReference 
:
{ before(grammarAccess.getEnumReferenceRule()); }
	 ruleEnumReference
{ after(grammarAccess.getEnumReferenceRule()); } 
	 EOF 
;

// Rule EnumReference
ruleEnumReference 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumReferenceAccess().getGroup()); }
(rule__EnumReference__Group__0)
{ after(grammarAccess.getEnumReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumMemberList
entryRuleEnumMemberList 
:
{ before(grammarAccess.getEnumMemberListRule()); }
	 ruleEnumMemberList
{ after(grammarAccess.getEnumMemberListRule()); } 
	 EOF 
;

// Rule EnumMemberList
ruleEnumMemberList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumMemberListAccess().getGroup()); }
(rule__EnumMemberList__Group__0)
{ after(grammarAccess.getEnumMemberListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumMember
entryRuleEnumMember 
:
{ before(grammarAccess.getEnumMemberRule()); }
	 ruleEnumMember
{ after(grammarAccess.getEnumMemberRule()); } 
	 EOF 
;

// Rule EnumMember
ruleEnumMember 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumMemberAccess().getGroup()); }
(rule__EnumMember__Group__0)
{ after(grammarAccess.getEnumMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarators
entryRuleDeclarators 
:
{ before(grammarAccess.getDeclaratorsRule()); }
	 ruleDeclarators
{ after(grammarAccess.getDeclaratorsRule()); } 
	 EOF 
;

// Rule Declarators
ruleDeclarators 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaratorsAccess().getGroup()); }
(rule__Declarators__Group__0)
{ after(grammarAccess.getDeclaratorsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarator
entryRuleDeclarator 
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruleDeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule Declarator
ruleDeclarator 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaratorAccess().getGroup()); }
(rule__Declarator__Group__0)
{ after(grammarAccess.getDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirectDeclarator
entryRuleDirectDeclarator 
:
{ before(grammarAccess.getDirectDeclaratorRule()); }
	 ruleDirectDeclarator
{ after(grammarAccess.getDirectDeclaratorRule()); } 
	 EOF 
;

// Rule DirectDeclarator
ruleDirectDeclarator 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
(rule__DirectDeclarator__Group__0)
{ after(grammarAccess.getDirectDeclaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArraySpecification
entryRuleArraySpecification 
:
{ before(grammarAccess.getArraySpecificationRule()); }
	 ruleArraySpecification
{ after(grammarAccess.getArraySpecificationRule()); } 
	 EOF 
;

// Rule ArraySpecification
ruleArraySpecification 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArraySpecificationAccess().getGroup()); }
(rule__ArraySpecification__Group__0)
{ after(grammarAccess.getArraySpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullyQualifiedName
entryRuleFullyQualifiedName 
:
{ before(grammarAccess.getFullyQualifiedNameRule()); }
	 ruleFullyQualifiedName
{ after(grammarAccess.getFullyQualifiedNameRule()); } 
	 EOF 
;

// Rule FullyQualifiedName
ruleFullyQualifiedName 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFullyQualifiedNameAccess().getGroup()); }
(rule__FullyQualifiedName__Group__0)
{ after(grammarAccess.getFullyQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDefinition
entryRuleConstantDefinition 
:
{ before(grammarAccess.getConstantDefinitionRule()); }
	 ruleConstantDefinition
{ after(grammarAccess.getConstantDefinitionRule()); } 
	 EOF 
;

// Rule ConstantDefinition
ruleConstantDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup()); }
(rule__ConstantDefinition__Group__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDefinition
entryRuleInterfaceDefinition 
:
{ before(grammarAccess.getInterfaceDefinitionRule()); }
	 ruleInterfaceDefinition
{ after(grammarAccess.getInterfaceDefinitionRule()); } 
	 EOF 
;

// Rule InterfaceDefinition
ruleInterfaceDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getGroup()); }
(rule__InterfaceDefinition__Group__0)
{ after(grammarAccess.getInterfaceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodDefinition
entryRuleMethodDefinition 
:
{ before(grammarAccess.getMethodDefinitionRule()); }
	 ruleMethodDefinition
{ after(grammarAccess.getMethodDefinitionRule()); } 
	 EOF 
;

// Rule MethodDefinition
ruleMethodDefinition 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodDefinitionAccess().getGroup()); }
(rule__MethodDefinition__Group__0)
{ after(grammarAccess.getMethodDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeDirective
entryRuleIncludeDirective 
:
{ before(grammarAccess.getIncludeDirectiveRule()); }
	 ruleIncludeDirective
{ after(grammarAccess.getIncludeDirectiveRule()); } 
	 EOF 
;

// Rule IncludeDirective
ruleIncludeDirective 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeDirectiveAccess().getGroup()); }
(rule__IncludeDirective__Group__0)
{ after(grammarAccess.getIncludeDirectiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludePath
entryRuleIncludePath 
:
{ before(grammarAccess.getIncludePathRule()); }
	 ruleIncludePath
{ after(grammarAccess.getIncludePathRule()); } 
	 EOF 
;

// Rule IncludePath
ruleIncludePath 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludePathAccess().getAlternatives()); }
(rule__IncludePath__Alternatives)
{ after(grammarAccess.getIncludePathAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TypeQualifier
ruleTypeQualifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getAlternatives()); }
(rule__TypeQualifier__Alternatives)
{ after(grammarAccess.getTypeQualifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TypeSpecifier
ruleTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
(rule__TypeSpecifier__Alternatives)
{ after(grammarAccess.getTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ParameterQualifier
ruleParameterQualifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQualifierAccess().getAlternatives()); }
(rule__ParameterQualifier__Alternatives)
{ after(grammarAccess.getParameterQualifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__IdtFile__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getConstantAssignment_1_0()); }
(rule__IdtFile__ConstantAssignment_1_0)
{ after(grammarAccess.getIdtFileAccess().getConstantAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getIdtFileAccess().getTypeAssignment_1_1()); }
(rule__IdtFile__TypeAssignment_1_1)
{ after(grammarAccess.getIdtFileAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getTypedefSpecificationParserRuleCall_0_0()); }
	ruleTypedefSpecification
{ after(grammarAccess.getTypeDefinitionAccess().getTypedefSpecificationParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTypeDefinitionAccess().getStructOrUnionSpecificationParserRuleCall_0_1()); }
	ruleStructOrUnionSpecification
{ after(grammarAccess.getTypeDefinitionAccess().getStructOrUnionSpecificationParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getTypeDefinitionAccess().getEnumSpecificationParserRuleCall_0_2()); }
	ruleEnumSpecification
{ after(grammarAccess.getTypeDefinitionAccess().getEnumSpecificationParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecificationAccess().getTypeDefNameAssignment_0()); }
(rule__TypeSpecification__TypeDefNameAssignment_0)
{ after(grammarAccess.getTypeSpecificationAccess().getTypeDefNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeSpecificationAccess().getStructOrUnionSpecificationParserRuleCall_1()); }
	ruleStructOrUnionSpecification
{ after(grammarAccess.getTypeSpecificationAccess().getStructOrUnionSpecificationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeSpecificationAccess().getEnumSpecificationParserRuleCall_2()); }
	ruleEnumSpecification
{ after(grammarAccess.getTypeSpecificationAccess().getEnumSpecificationParserRuleCall_2()); }
)

    |(
(
{ before(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierAssignment_3()); }
(rule__TypeSpecification__TypeSpecifierAssignment_3)
{ after(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierAssignment_3()); }
)
(
{ before(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierAssignment_3()); }
(rule__TypeSpecification__TypeSpecifierAssignment_3)*
{ after(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionSpecificationAccess().getStructOrUnionDefinitionParserRuleCall_0()); }
	ruleStructOrUnionDefinition
{ after(grammarAccess.getStructOrUnionSpecificationAccess().getStructOrUnionDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStructOrUnionSpecificationAccess().getStructorUnionReferenceParserRuleCall_1()); }
	ruleStructorUnionReference
{ after(grammarAccess.getStructOrUnionSpecificationAccess().getStructorUnionReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructOrUnionAccess().getStructKeyword_0()); }
)

    |(
{ before(grammarAccess.getStructOrUnionAccess().getUnionKeyword_1()); }

	'union' 

{ after(grammarAccess.getStructOrUnionAccess().getUnionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumSpecificationAccess().getEnumDefinitionParserRuleCall_0()); }
	ruleEnumDefinition
{ after(grammarAccess.getEnumSpecificationAccess().getEnumDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEnumSpecificationAccess().getEnumReferenceParserRuleCall_1()); }
	ruleEnumReference
{ after(grammarAccess.getEnumSpecificationAccess().getEnumReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getIdAssignment_0_0()); }
(rule__DirectDeclarator__IdAssignment_0_0)
{ after(grammarAccess.getDirectDeclaratorAccess().getIdAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDirectDeclaratorAccess().getGroup_0_1()); }
(rule__DirectDeclarator__Group_0_1__0)
{ after(grammarAccess.getDirectDeclaratorAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySpecificationAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getArraySpecificationAccess().getINTTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getArraySpecificationAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getArraySpecificationAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDefinition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getGroup_2_0()); }
(rule__MethodDefinition__Group_2_0__0)
{ after(grammarAccess.getMethodDefinitionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getMethodDefinitionAccess().getGroup_2_1()); }
(rule__MethodDefinition__Group_2_1__0)
{ after(grammarAccess.getMethodDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludePath__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getIncludePathAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIncludePathAccess().getGroup_1()); }
(rule__IncludePath__Group_1__0)
{ after(grammarAccess.getIncludePathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeQualifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeQualifierAccess().getConstEnumLiteralDeclaration_0()); }
(	'const' 
)
{ after(grammarAccess.getTypeQualifierAccess().getConstEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeQualifierAccess().getVolatileEnumLiteralDeclaration_1()); }
(	'volatile' 
)
{ after(grammarAccess.getTypeQualifierAccess().getVolatileEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecifierAccess().getVoidEnumLiteralDeclaration_0()); }
(	'void' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getVoidEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getCharEnumLiteralDeclaration_1()); }
(	'char' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getCharEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getShortEnumLiteralDeclaration_2()); }
(	'short' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getShortEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getIntEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getIntEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getLongEnumLiteralDeclaration_4()); }
(	'long' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getLongEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getFloatEnumLiteralDeclaration_5()); }
(	'float' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getFloatEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getDoubleEnumLiteralDeclaration_6()); }
(	'double' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getDoubleEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getSignedEnumLiteralDeclaration_7()); }
(	'signed' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getSignedEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUnsignedEnumLiteralDeclaration_8()); }
(	'unsigned' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUnsignedEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getStringEnumLiteralDeclaration_9()); }
(	'string' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getStringEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getInt8_tEnumLiteralDeclaration_10()); }
(	'int8_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getInt8_tEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUint8_tEnumLiteralDeclaration_11()); }
(	'uint8_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUint8_tEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getInt16_tEnumLiteralDeclaration_12()); }
(	'int16_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getInt16_tEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUint16_tEnumLiteralDeclaration_13()); }
(	'uint16_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUint16_tEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getInt32_tEnumLiteralDeclaration_14()); }
(	'int32_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getInt32_tEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUint32_tEnumLiteralDeclaration_15()); }
(	'uint32_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUint32_tEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getInt64_tEnumLiteralDeclaration_16()); }
(	'int64_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getInt64_tEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUint64_tEnumLiteralDeclaration_17()); }
(	'uint64_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUint64_tEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getIntptr_tEnumLiteralDeclaration_18()); }
(	'intptr_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getIntptr_tEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getTypeSpecifierAccess().getUintptr_tEnumLiteralDeclaration_19()); }
(	'uintptr_t' 
)
{ after(grammarAccess.getTypeSpecifierAccess().getUintptr_tEnumLiteralDeclaration_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterQualifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterQualifierAccess().getInEnumLiteralDeclaration_0()); }
(	'in' 
)
{ after(grammarAccess.getParameterQualifierAccess().getInEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getParameterQualifierAccess().getOutEnumLiteralDeclaration_1()); }
(	'out' 
)
{ after(grammarAccess.getParameterQualifierAccess().getOutEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__IdtFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getIncludesAssignment_0()); }
(rule__IdtFile__IncludesAssignment_0)*
{ after(grammarAccess.getIdtFileAccess().getIncludesAssignment_0()); }
)

	rule__IdtFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IdtFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getAlternatives_1()); }
(rule__IdtFile__Alternatives_1)*
{ after(grammarAccess.getIdtFileAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getAlternatives_0()); }
(rule__TypeDefinition__Alternatives_0)
{ after(grammarAccess.getTypeDefinitionAccess().getAlternatives_0()); }
)

	rule__TypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getTypeDefinitionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedefSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getTypedefKeyword_0()); }

	'typedef' 

{ after(grammarAccess.getTypedefSpecificationAccess().getTypedefKeyword_0()); }
)

	rule__TypedefSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getQualifedTypeAssignment_1()); }
(rule__TypedefSpecification__QualifedTypeAssignment_1)
{ after(grammarAccess.getTypedefSpecificationAccess().getQualifedTypeAssignment_1()); }
)

	rule__TypedefSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getDecAssignment_2()); }
(rule__TypedefSpecification__DecAssignment_2)
{ after(grammarAccess.getTypedefSpecificationAccess().getDecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedTypeSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeQualifierAssignment_0()); }
(rule__QualifiedTypeSpecification__TypeQualifierAssignment_0)*
{ after(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeQualifierAssignment_0()); }
)

	rule__QualifiedTypeSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedTypeSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeSpecAssignment_1()); }
(rule__QualifiedTypeSpecification__TypeSpecAssignment_1)
{ after(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeSpecAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructOrUnionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getStructAssignment_0()); }
(rule__StructOrUnionDefinition__StructAssignment_0)
{ after(grammarAccess.getStructOrUnionDefinitionAccess().getStructAssignment_0()); }
)

	rule__StructOrUnionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getIdAssignment_1()); }
(rule__StructOrUnionDefinition__IdAssignment_1)?
{ after(grammarAccess.getStructOrUnionDefinitionAccess().getIdAssignment_1()); }
)

	rule__StructOrUnionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStructOrUnionDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__StructOrUnionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getStructMemberAssignment_3()); }
(rule__StructOrUnionDefinition__StructMemberAssignment_3)*
{ after(grammarAccess.getStructOrUnionDefinitionAccess().getStructMemberAssignment_3()); }
)

	rule__StructOrUnionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__StructOrUnionDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getStructOrUnionDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructorUnionReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructorUnionReferenceAccess().getStructAssignment_0()); }
(rule__StructorUnionReference__StructAssignment_0)
{ after(grammarAccess.getStructorUnionReferenceAccess().getStructAssignment_0()); }
)

	rule__StructorUnionReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__StructorUnionReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructorUnionReferenceAccess().getIdAssignment_1()); }
(rule__StructorUnionReference__IdAssignment_1)
{ after(grammarAccess.getStructorUnionReferenceAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getQualTypeAssignment_0()); }
(rule__StructMember__QualTypeAssignment_0)
{ after(grammarAccess.getStructMemberAccess().getQualTypeAssignment_0()); }
)

	rule__StructMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__StructMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getDecAssignment_1()); }
(rule__StructMember__DecAssignment_1)
{ after(grammarAccess.getStructMemberAccess().getDecAssignment_1()); }
)

	rule__StructMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__StructMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getGroup_2()); }
(rule__StructMember__Group_2__0)?
{ after(grammarAccess.getStructMemberAccess().getGroup_2()); }
)

	rule__StructMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__StructMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStructMemberAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructMember__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getStructMemberAccess().getColonKeyword_2_0()); }
)

	rule__StructMember__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__StructMember__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getStructMemberAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumDefinitionAccess().getEnumKeyword_0()); }
)

	rule__EnumDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getIdAssignment_1()); }
(rule__EnumDefinition__IdAssignment_1)?
{ after(grammarAccess.getEnumDefinitionAccess().getIdAssignment_1()); }
)

	rule__EnumDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

	rule__EnumDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getEnumMemberListAssignment_3()); }
(rule__EnumDefinition__EnumMemberListAssignment_3)
{ after(grammarAccess.getEnumDefinitionAccess().getEnumMemberListAssignment_3()); }
)

	rule__EnumDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnumDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumReferenceAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumReferenceAccess().getEnumKeyword_0()); }
)

	rule__EnumReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumReferenceAccess().getIdAssignment_1()); }
(rule__EnumReference__IdAssignment_1)
{ after(grammarAccess.getEnumReferenceAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMemberList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberListAccess().getEnumMemberParserRuleCall_0()); }
	ruleEnumMember
{ after(grammarAccess.getEnumMemberListAccess().getEnumMemberParserRuleCall_0()); }
)

	rule__EnumMemberList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberListAccess().getGroup_1()); }
(rule__EnumMemberList__Group_1__0)*
{ after(grammarAccess.getEnumMemberListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMemberList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getEnumMemberListAccess().getCommaKeyword_1_0()); }
)

	rule__EnumMemberList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberListAccess().getEnumMemberAssignment_1_1()); }
(rule__EnumMemberList__EnumMemberAssignment_1_1)
{ after(grammarAccess.getEnumMemberListAccess().getEnumMemberAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getIdAssignment_0()); }
(rule__EnumMember__IdAssignment_0)
{ after(grammarAccess.getEnumMemberAccess().getIdAssignment_0()); }
)

	rule__EnumMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getGroup_1()); }
(rule__EnumMember__Group_1__0)?
{ after(grammarAccess.getEnumMemberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumMember__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getEnumMemberAccess().getEqualsSignKeyword_1_0()); }
)

	rule__EnumMember__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMember__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getEnumMemberAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarators__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getDecAssignment_0()); }
(rule__Declarators__DecAssignment_0)
{ after(grammarAccess.getDeclaratorsAccess().getDecAssignment_0()); }
)

	rule__Declarators__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarators__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getGroup_1()); }
(rule__Declarators__Group_1__0)*
{ after(grammarAccess.getDeclaratorsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarators__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getDeclaratorsAccess().getCommaKeyword_1_0()); }
)

	rule__Declarators__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarators__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getDeclaratorListAssignment_1_1()); }
(rule__Declarators__DeclaratorListAssignment_1_1)
{ after(grammarAccess.getDeclaratorsAccess().getDeclaratorListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getGroup_0()); }
(rule__Declarator__Group_0__0)*
{ after(grammarAccess.getDeclaratorAccess().getGroup_0()); }
)

	rule__Declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getDcAssignment_1()); }
(rule__Declarator__DcAssignment_1)
{ after(grammarAccess.getDeclaratorAccess().getDcAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declarator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getDeclaratorAccess().getAsteriskKeyword_0_0()); }
)

	rule__Declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getTypeQualifierAssignment_0_1()); }
(rule__Declarator__TypeQualifierAssignment_0_1)*
{ after(grammarAccess.getDeclaratorAccess().getTypeQualifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirectDeclarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getAlternatives_0()); }
(rule__DirectDeclarator__Alternatives_0)
{ after(grammarAccess.getDirectDeclaratorAccess().getAlternatives_0()); }
)

	rule__DirectDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getArraySpecificationParserRuleCall_1()); }
(	ruleArraySpecification)*
{ after(grammarAccess.getDirectDeclaratorAccess().getArraySpecificationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirectDeclarator__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getLeftParenthesisKeyword_0_1_0()); }

	'(' 

{ after(grammarAccess.getDirectDeclaratorAccess().getLeftParenthesisKeyword_0_1_0()); }
)

	rule__DirectDeclarator__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getDeclaratorParserRuleCall_0_1_1()); }
	ruleDeclarator
{ after(grammarAccess.getDirectDeclaratorAccess().getDeclaratorParserRuleCall_0_1_1()); }
)

	rule__DirectDeclarator__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectDeclarator__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getRightParenthesisKeyword_0_1_2()); }

	')' 

{ after(grammarAccess.getDirectDeclaratorAccess().getRightParenthesisKeyword_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArraySpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_0()); }
)

	rule__ArraySpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySpecificationAccess().getAlternatives_1()); }
(rule__ArraySpecification__Alternatives_1)
{ after(grammarAccess.getArraySpecificationAccess().getAlternatives_1()); }
)

	rule__ArraySpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FullyQualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

	rule__FullyQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FullyQualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullyQualifiedNameAccess().getGroup_1()); }
(rule__FullyQualifiedName__Group_1__0)*
{ after(grammarAccess.getFullyQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FullyQualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullyQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFullyQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

	rule__FullyQualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FullyQualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFullyQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getDefineKeyword_0()); }

	'#define' 

{ after(grammarAccess.getConstantDefinitionAccess().getDefineKeyword_0()); }
)

	rule__ConstantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getIdAssignment_1()); }
(rule__ConstantDefinition__IdAssignment_1)
{ after(grammarAccess.getConstantDefinitionAccess().getIdAssignment_1()); }
)

	rule__ConstantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getConstantDefinitionAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getInterfaceKeyword_0()); }
)

	rule__InterfaceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getUnmanagedKeyword_1()); }
(
	'unmanaged' 
)?
{ after(grammarAccess.getInterfaceDefinitionAccess().getUnmanagedKeyword_1()); }
)

	rule__InterfaceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getFqnAssignment_2()); }
(rule__InterfaceDefinition__FqnAssignment_2)
{ after(grammarAccess.getInterfaceDefinitionAccess().getFqnAssignment_2()); }
)

	rule__InterfaceDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getGroup_3()); }
(rule__InterfaceDefinition__Group_3__0)?
{ after(grammarAccess.getInterfaceDefinitionAccess().getGroup_3()); }
)

	rule__InterfaceDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getLeftCurlyBracketKeyword_4()); }
)

	rule__InterfaceDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getMethodDefAssignment_5()); }
(rule__InterfaceDefinition__MethodDefAssignment_5)*
{ after(grammarAccess.getInterfaceDefinitionAccess().getMethodDefAssignment_5()); }
)

	rule__InterfaceDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__InterfaceDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getInterfaceDefinitionAccess().getColonKeyword_3_0()); }
)

	rule__InterfaceDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getFqn2Assignment_3_1()); }
(rule__InterfaceDefinition__Fqn2Assignment_3_1)
{ after(grammarAccess.getInterfaceDefinitionAccess().getFqn2Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getQualifiedTypeSpecAssignment_0()); }
(rule__MethodDefinition__QualifiedTypeSpecAssignment_0)
{ after(grammarAccess.getMethodDefinitionAccess().getQualifiedTypeSpecAssignment_0()); }
)

	rule__MethodDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getIdAssignment_1()); }
(rule__MethodDefinition__IdAssignment_1)
{ after(grammarAccess.getMethodDefinitionAccess().getIdAssignment_1()); }
)

	rule__MethodDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getAlternatives_2()); }
(rule__MethodDefinition__Alternatives_2)
{ after(grammarAccess.getMethodDefinitionAccess().getAlternatives_2()); }
)

	rule__MethodDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getMethodDefinitionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodDefinition__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getMethodDefinitionAccess().getLeftParenthesisKeyword_2_0_0()); }
)

	rule__MethodDefinition__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getVoidKeyword_2_0_1()); }
(
	'void' 
)?
{ after(grammarAccess.getMethodDefinitionAccess().getVoidKeyword_2_0_1()); }
)

	rule__MethodDefinition__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getRightParenthesisKeyword_2_0_2()); }

	')' 

{ after(grammarAccess.getMethodDefinitionAccess().getRightParenthesisKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getMethodDefinitionAccess().getLeftParenthesisKeyword_2_1_0()); }
)

	rule__MethodDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getParameterListAssignment_2_1_1()); }
(rule__MethodDefinition__ParameterListAssignment_2_1_1)
{ after(grammarAccess.getMethodDefinitionAccess().getParameterListAssignment_2_1_1()); }
)

	rule__MethodDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDefinition__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getMethodDefinitionAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamAssignment_0()); }
(rule__ParameterList__ParamAssignment_0)
{ after(grammarAccess.getParameterListAccess().getParamAssignment_0()); }
)

	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
(rule__ParameterList__Group_1__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)

	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
(rule__ParameterList__Group_2__0)?
{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)

	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsAssignment_1_1()); }
(rule__ParameterList__ParamsAssignment_1_1)
{ after(grammarAccess.getParameterListAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_2_0()); }
)

	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getFullStopFullStopFullStopKeyword_2_1()); }

	'...' 

{ after(grammarAccess.getParameterListAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterQualifierAssignment_0()); }
(rule__Parameter__ParameterQualifierAssignment_0)*
{ after(grammarAccess.getParameterAccess().getParameterQualifierAssignment_0()); }
)

	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getQualifiedTypeSpecAssignment_1()); }
(rule__Parameter__QualifiedTypeSpecAssignment_1)
{ after(grammarAccess.getParameterAccess().getQualifiedTypeSpecAssignment_1()); }
)

	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDecAssignment_2()); }
(rule__Parameter__DecAssignment_2)
{ after(grammarAccess.getParameterAccess().getDecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IncludeDirective__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDirectiveAccess().getIncludeKeyword_0()); }

	'#include' 

{ after(grammarAccess.getIncludeDirectiveAccess().getIncludeKeyword_0()); }
)

	rule__IncludeDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeDirective__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDirectiveAccess().getPathAssignment_1()); }
(rule__IncludeDirective__PathAssignment_1)
{ after(grammarAccess.getIncludeDirectiveAccess().getPathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IncludePath__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getIncludePathAccess().getLessThanSignKeyword_1_0()); }
)

	rule__IncludePath__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludePath__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getIncludePathAccess().getIDTerminalRuleCall_1_1()); }
)

	rule__IncludePath__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludePath__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getFullStopKeyword_1_2()); }

	'.' 

{ after(grammarAccess.getIncludePathAccess().getFullStopKeyword_1_2()); }
)

	rule__IncludePath__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludePath__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getIDTerminalRuleCall_1_3()); }
	RULE_ID
{ after(grammarAccess.getIncludePathAccess().getIDTerminalRuleCall_1_3()); }
)

	rule__IncludePath__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludePath__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludePathAccess().getGreaterThanSignKeyword_1_4()); }

	'>' 

{ after(grammarAccess.getIncludePathAccess().getGreaterThanSignKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IdtFile__IncludesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getIncludesIncludeDirectiveParserRuleCall_0_0()); }
	ruleIncludeDirective{ after(grammarAccess.getIdtFileAccess().getIncludesIncludeDirectiveParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdtFile__ConstantAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getConstantConstantDefinitionParserRuleCall_1_0_0()); }
	ruleConstantDefinition{ after(grammarAccess.getIdtFileAccess().getConstantConstantDefinitionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdtFile__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdtFileAccess().getTypeTypeDefinitionParserRuleCall_1_1_0()); }
	ruleTypeDefinition{ after(grammarAccess.getIdtFileAccess().getTypeTypeDefinitionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__TypedefSpecification__QualifedTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getQualifedTypeQualifiedTypeSpecificationParserRuleCall_1_0()); }
	ruleQualifiedTypeSpecification{ after(grammarAccess.getTypedefSpecificationAccess().getQualifedTypeQualifiedTypeSpecificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefSpecification__DecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedefSpecificationAccess().getDecDeclaratorsParserRuleCall_2_0()); }
	ruleDeclarators{ after(grammarAccess.getTypedefSpecificationAccess().getDecDeclaratorsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedTypeSpecification__TypeQualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeQualifierTypeQualifierEnumRuleCall_0_0()); }
	ruleTypeQualifier{ after(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeQualifierTypeQualifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedTypeSpecification__TypeSpecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeSpecTypeSpecificationParserRuleCall_1_0()); }
	ruleTypeSpecification{ after(grammarAccess.getQualifiedTypeSpecificationAccess().getTypeSpecTypeSpecificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecification__TypeDefNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecificationAccess().getTypeDefNameTypedefNameParserRuleCall_0_0()); }
	ruleTypedefName{ after(grammarAccess.getTypeSpecificationAccess().getTypeDefNameTypedefNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecification__TypeSpecifierAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierTypeSpecifierEnumRuleCall_3_0()); }
	ruleTypeSpecifier{ after(grammarAccess.getTypeSpecificationAccess().getTypeSpecifierTypeSpecifierEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionDefinition__StructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getStructStructOrUnionParserRuleCall_0_0()); }
	ruleStructOrUnion{ after(grammarAccess.getStructOrUnionDefinitionAccess().getStructStructOrUnionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionDefinition__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStructOrUnionDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructOrUnionDefinition__StructMemberAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructOrUnionDefinitionAccess().getStructMemberStructMemberParserRuleCall_3_0()); }
	ruleStructMember{ after(grammarAccess.getStructOrUnionDefinitionAccess().getStructMemberStructMemberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructorUnionReference__StructAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructorUnionReferenceAccess().getStructStructOrUnionParserRuleCall_0_0()); }
	ruleStructOrUnion{ after(grammarAccess.getStructorUnionReferenceAccess().getStructStructOrUnionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructorUnionReference__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructorUnionReferenceAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStructorUnionReferenceAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructMember__QualTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getQualTypeQualifiedTypeSpecificationParserRuleCall_0_0()); }
	ruleQualifiedTypeSpecification{ after(grammarAccess.getStructMemberAccess().getQualTypeQualifiedTypeSpecificationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructMember__DecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructMemberAccess().getDecDeclaratorsParserRuleCall_1_0()); }
	ruleDeclarators{ after(grammarAccess.getStructMemberAccess().getDecDeclaratorsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDefinition__EnumMemberListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDefinitionAccess().getEnumMemberListEnumMemberListParserRuleCall_3_0()); }
	ruleEnumMemberList{ after(grammarAccess.getEnumDefinitionAccess().getEnumMemberListEnumMemberListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumReference__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumReferenceAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumReferenceAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberList__EnumMemberAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberListAccess().getEnumMemberEnumMemberParserRuleCall_1_1_0()); }
	ruleEnumMember{ after(grammarAccess.getEnumMemberListAccess().getEnumMemberEnumMemberParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMember__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumMemberAccess().getIdIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumMemberAccess().getIdIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarators__DecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getDecDeclaratorParserRuleCall_0_0()); }
	ruleDeclarator{ after(grammarAccess.getDeclaratorsAccess().getDecDeclaratorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarators__DeclaratorListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorsAccess().getDeclaratorListDeclaratorParserRuleCall_1_1_0()); }
	ruleDeclarator{ after(grammarAccess.getDeclaratorsAccess().getDeclaratorListDeclaratorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__TypeQualifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getTypeQualifierTypeQualifierEnumRuleCall_0_1_0()); }
	ruleTypeQualifier{ after(grammarAccess.getDeclaratorAccess().getTypeQualifierTypeQualifierEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DcAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaratorAccess().getDcDirectDeclaratorParserRuleCall_1_0()); }
	ruleDirectDeclarator{ after(grammarAccess.getDeclaratorAccess().getDcDirectDeclaratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirectDeclarator__IdAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getDirectDeclaratorAccess().getIdIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__FqnAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getFqnFullyQualifiedNameParserRuleCall_2_0()); }
	ruleFullyQualifiedName{ after(grammarAccess.getInterfaceDefinitionAccess().getFqnFullyQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__Fqn2Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getFqn2FullyQualifiedNameParserRuleCall_3_1_0()); }
	ruleFullyQualifiedName{ after(grammarAccess.getInterfaceDefinitionAccess().getFqn2FullyQualifiedNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDefinition__MethodDefAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDefinitionAccess().getMethodDefMethodDefinitionParserRuleCall_5_0()); }
	ruleMethodDefinition{ after(grammarAccess.getInterfaceDefinitionAccess().getMethodDefMethodDefinitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDefinition__QualifiedTypeSpecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getQualifiedTypeSpecQualifiedTypeSpecificationParserRuleCall_0_0()); }
	ruleQualifiedTypeSpecification{ after(grammarAccess.getMethodDefinitionAccess().getQualifiedTypeSpecQualifiedTypeSpecificationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDefinition__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMethodDefinitionAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDefinition__ParameterListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodDefinitionAccess().getParameterListParameterListParserRuleCall_2_1_1_0()); }
	ruleParameterList{ after(grammarAccess.getMethodDefinitionAccess().getParameterListParameterListParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamParameterParserRuleCall_0_0()); }
	ruleParameter{ after(grammarAccess.getParameterListAccess().getParamParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParameterListAccess().getParamsParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ParameterQualifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterQualifierParameterQualifierEnumRuleCall_0_0()); }
	ruleParameterQualifier{ after(grammarAccess.getParameterAccess().getParameterQualifierParameterQualifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__QualifiedTypeSpecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getQualifiedTypeSpecQualifiedTypeSpecificationParserRuleCall_1_0()); }
	ruleQualifiedTypeSpecification{ after(grammarAccess.getParameterAccess().getQualifiedTypeSpecQualifiedTypeSpecificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDecDeclaratorParserRuleCall_2_0()); }
	ruleDeclarator{ after(grammarAccess.getParameterAccess().getDecDeclaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeDirective__PathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeDirectiveAccess().getPathIncludePathParserRuleCall_1_0()); }
	ruleIncludePath{ after(grammarAccess.getIncludeDirectiveAccess().getPathIncludePathParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


